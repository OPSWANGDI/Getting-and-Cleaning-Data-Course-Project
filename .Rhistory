if(!file.exists('figures')) {dir.create('figures')}
png(filename = './figures/plot4.png', width = 480, height = 480, units = "px")
par(mfcol=c(2,2))
#Plot figure4
par(mfcol=c(2,2))
plot(data$Global_active_power~data$DateTime,xlab="",ylab = "Global Active Power",type="l")
plot(data$Sub_metering_1~data$DateTime,xlab="",ylab = "Energy sub metering",type="l")
lines(data$Sub_metering_2~data$DateTime,type="l",col="red")
lines(data$Sub_metering_3~data$DateTime,type="l",col="blue")
legend("topright",legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col = c('black', 'red', 'blue'),lwd=1)
plot(data$Voltage~data$DateTime,xlab="",ylab = "Voltage",type="l")
plot(data$Global_reactive_power~data$DateTime,xlab="",ylab = "Global_reactive_power",type="l")
dev.off()
rm(list=ls())
#Setup Working Directory
setwd("./datascience3homework")
if(!file.exists("homework6")){dir.create("homework6")}
#Read File
files <- file('./household_power_consumption.txt')
data1 <- read.table(text = grep("^[1,2]/2/2007",readLines(files),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
# convert data and time to specific format
data1$Date <- as.Date(data1$Date, format = '%d/%m/%Y')
data1$DateTime <- as.POSIXct(paste(data1$Date, data1$Time))
#PLOT 1
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './plot1.png', width = 480, height = 480, units = "px")
#Plotting
hist(data$Global_active_power,xlab = 'Global Active Power (kilowatt)', main = 'Global Active Power', col = 'red')
dev.off()
#PLOT 2
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './plot2.png', width = 480, height = 480, units = "px")
#Plotting
plot(data$Global_active_power~data$DateTime,xlab="",ylab = "Global Active Power (kilowatt)",type="l")
dev.off()
#PLOT 3
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './figures/plot3.png', width = 480, height = 480, units = "px")
#Plotting
plot(data$Sub_metering_1~data$DateTime,xlab="",ylab = "Energy sub metering",type="l")
lines(data$Sub_metering_2~data$DateTime,type="l",col="red")
lines(data$Sub_metering_3~data$DateTime,type="l",col="blue")
legend("topright",legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col = c('black', 'red', 'blue'),lwd=1)
dev.off()
#PLOT 4
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './figures/plot4.png', width = 480, height = 480, units = "px")
#Plotting
par(mfcol=c(2,2))
plot(data$Global_active_power~data$DateTime,xlab="",ylab = "Global Active Power",type="l")
plot(data$Sub_metering_1~data$DateTime,xlab="",ylab = "Energy sub metering",type="l")
lines(data$Sub_metering_2~data$DateTime,type="l",col="red")
lines(data$Sub_metering_3~data$DateTime,type="l",col="blue")
legend("topright",legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col = c('black', 'red', 'blue'),lwd=1)
plot(data$Voltage~data$DateTime,xlab="",ylab = "Voltage",type="l")
plot(data$Global_reactive_power~data$DateTime,xlab="",ylab = "Global_reactive_power",type="l")
dev.off()
rm(list = ls())
#Setup Working Directory
setwd("./datascience3homework")
#Read File
files <- file('./household_power_consumption.txt')
data1 <- read.table(text = grep("^[1,2]/2/2007",readLines(files),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
# convert data and time to specific format
data1$Date <- as.Date(data1$Date, format = '%d/%m/%Y')
data1$DateTime <- as.POSIXct(paste(data1$Date, data1$Time))
#PLOT 1
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './plot1.png', width = 480, height = 480, units = "px")
#Plotting
hist(data$Global_active_power,xlab = 'Global Active Power (kilowatt)', main = 'Global Active Power', col = 'red')
dev.off()
#PLOT 2
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './plot2.png', width = 480, height = 480, units = "px")
#Plotting
plot(data$Global_active_power~data$DateTime,xlab="",ylab = "Global Active Power (kilowatt)",type="l")
dev.off()
#PLOT 3
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './figures/plot3.png', width = 480, height = 480, units = "px")
#Plotting
plot(data$Sub_metering_1~data$DateTime,xlab="",ylab = "Energy sub metering",type="l")
lines(data$Sub_metering_2~data$DateTime,type="l",col="red")
lines(data$Sub_metering_3~data$DateTime,type="l",col="blue")
legend("topright",legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col = c('black', 'red', 'blue'),lwd=1)
dev.off()
#PLOT 4
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './figures/plot4.png', width = 480, height = 480, units = "px")
#Plotting
par(mfcol=c(2,2))
plot(data$Global_active_power~data$DateTime,xlab="",ylab = "Global Active Power",type="l")
plot(data$Sub_metering_1~data$DateTime,xlab="",ylab = "Energy sub metering",type="l")
lines(data$Sub_metering_2~data$DateTime,type="l",col="red")
lines(data$Sub_metering_3~data$DateTime,type="l",col="blue")
legend("topright",legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col = c('black', 'red', 'blue'),lwd=1)
plot(data$Voltage~data$DateTime,xlab="",ylab = "Voltage",type="l")
plot(data$Global_reactive_power~data$DateTime,xlab="",ylab = "Global_reactive_power",type="l")
dev.off()
#Read File
files <- file('./household_power_consumption.txt')
data1 <- read.table(text = grep("^[1,2]/2/2007",readLines(files),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
# convert data and time to specific format
data1$Date <- as.Date(data1$Date, format = '%d/%m/%Y')
data1$DateTime <- as.POSIXct(paste(data1$Date, data1$Time))
png(filename = './plot1.png', width = 480, height = 480, units = "px")
hist(data$Global_active_power,xlab = 'Global Active Power (kilowatt)', main = 'Global Active Power', col = 'red')
dev.off()
#PLOT 1
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
if(!file.exists('figures')) dir.create('figures')
png(filename = './plot1.png', width = 480, height = 480, units = "px")
#Plotting
hist(data$Global_active_power,xlab = 'Global Active Power (kilowatt)', main = 'Global Active Power', col = 'red')
dev.off()
#Setup Working Directory
setwd("./datascience3homework")
#Read File
files <- file('./household_power_consumption.txt')
data1 <- read.table(text = grep("^[1,2]/2/2007",readLines(files),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
# convert data and time to specific format
data1$Date <- as.Date(data1$Date, format = '%d/%m/%Y')
data1$DateTime <- as.POSIXct(paste(data1$Date, data1$Time))
#PLOT 1
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './plot1.png', width = 480, height = 480, units = "px")
#Plotting
hist(data1$Global_active_power,xlab = 'Global Active Power (kilowatt)', main = 'Global Active Power', col = 'red')
dev.off()
#PLOT 2
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './plot2.png', width = 480, height = 480, units = "px")
#Plotting
plot(data1$Global_active_power~data1$DateTime,xlab="",ylab = "Global Active Power (kilowatt)",type="l")
dev.off()
#PLOT 3
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './figures/plot3.png', width = 480, height = 480, units = "px")
#Plotting
plot(data1$Sub_metering_1~data1$DateTime,xlab="",ylab = "Energy sub metering",type="l")
lines(data1$Sub_metering_2~data1$DateTime,type="l",col="red")
lines(data1$Sub_metering_3~data1$DateTime,type="l",col="blue")
legend("topright",legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col = c('black', 'red', 'blue'),lwd=1)
dev.off()
#PLOT 4
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './figures/plot4.png', width = 480, height = 480, units = "px")
#Plotting
par(mfcol=c(2,2))
plot(data1$Global_active_power~data1$DateTime,xlab="",ylab = "Global Active Power",type="l")
plot(data1$Sub_metering_1~data1$DateTime,xlab="",ylab = "Energy sub metering",type="l")
lines(data1$Sub_metering_2~data1$DateTime,type="l",col="red")
lines(data1$Sub_metering_3~data1$DateTime,type="l",col="blue")
legend("topright",legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col = c('black', 'red', 'blue'),lwd=1)
plot(data1$Voltage~data1$DateTime,xlab="",ylab = "Voltage",type="l")
plot(data1$Global_reactive_power~data1$DateTime,xlab="",ylab = "Global_reactive_power",type="l")
dev.off()
rm(list=ls())
#Setup Working Directory
setwd("./datascience3homework")
#Read File
files <- file('./household_power_consumption.txt')
data1 <- read.table(text = grep("^[1,2]/2/2007",readLines(files),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
# convert data and time to specific format
data1$Date <- as.Date(data1$Date, format = '%d/%m/%Y')
data1$DateTime <- as.POSIXct(paste(data1$Date, data1$Time))
#PLOT 1
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './plot1.png', width = 480, height = 480, units = "px")
#Plotting
hist(data1$Global_active_power,xlab = 'Global Active Power (kilowatt)', main = 'Global Active Power', col = 'red')
dev.off()
#PLOT 2
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './plot2.png', width = 480, height = 480, units = "px")
#Plotting
plot(data1$Global_active_power~data1$DateTime,xlab="",ylab = "Global Active Power (kilowatt)",type="l")
dev.off()
#PLOT 3
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './plot3.png', width = 480, height = 480, units = "px")
#Plotting
plot(data1$Sub_metering_1~data1$DateTime,xlab="",ylab = "Energy sub metering",type="l")
lines(data1$Sub_metering_2~data1$DateTime,type="l",col="red")
lines(data1$Sub_metering_3~data1$DateTime,type="l",col="blue")
legend("topright",legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col = c('black', 'red', 'blue'),lwd=1)
dev.off()
#PLOT 4
#Construct the plot and save it to a PNG file with a width of 480 pixels and a height of 480 pixels
png(filename = './plot4.png', width = 480, height = 480, units = "px")
#Plotting
par(mfcol=c(2,2))
plot(data1$Global_active_power~data1$DateTime,xlab="",ylab = "Global Active Power",type="l")
plot(data1$Sub_metering_1~data1$DateTime,xlab="",ylab = "Energy sub metering",type="l")
lines(data1$Sub_metering_2~data1$DateTime,type="l",col="red")
lines(data1$Sub_metering_3~data1$DateTime,type="l",col="blue")
legend("topright",legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col = c('black', 'red', 'blue'),lwd=1)
plot(data1$Voltage~data1$DateTime,xlab="",ylab = "Voltage",type="l")
plot(data1$Global_reactive_power~data1$DateTime,xlab="",ylab = "Global_reactive_power",type="l")
dev.off()
setwd("./homework7")
data1<-read.csv("./activity.csv")
pwd
getwd()
setwd( "/Users/dishing/datascience3homework/homework6")
setwd( "/Users/dishing/datascience3homework/homework7")
setwd( "/Users/dishing/datascience3homework/homework7")
data1<-read.csv("./activity.csv")
setwd( "/Users/dishing/datascience3homework/homework7")
str(data1)
class(data1)
group_by(data1,date)
summarise(date,mean(steps,na.rm = T)
)
summarise(data1,mean(steps,na.rm = T)
)
with(data1,table(date,mean(steps,na.rm = T)))
table(date,mean(steps,na.rm = T),data1)
table(mean(steps,na.rm = T))
table(mean(data1$steps,na.rm = T))
summarise(mean(data1$steps))
summarise(mean(data1$steps,na.rm=T))
tapply(data1,data1$date,mean)
tapply(data1$steps,data1$date,mean)
tapply(data1$steps,data1$date,mean,na.omit=T)
tapply(data1$steps,data1$date,mean)
tnspd<-tapply(data1$steps,data1$date,sum)
tnspd
class(tnspd)
hist(tnspd)
hist(tnspd~data1$date)
mfrow=c(1,0)
hist(tnspd)
mfrow=c(1,0)
hist(tnspd)
date1<-unique(data1$date)
data1
date1
class(date1)
str(data1)
data1$date<-as.Date(data1$date)
str(data1)
tnspd<-tapply(data1$steps,data1$date,sum)
tnspd
hist(tnspd)
date1<-unique(data1$date)
date1
class(date1)
ques1<-data.frame(date1,tnspd)
ques1
hist(ques1$tnspd~ques1$date1)
hist(ques1$tnspd)
group_by(data1,data1$date)
data2<-group_by(data1,data1$date)
summarise(mean(data2$steps,na.rm = T))
table(data2$date)
table(data2$steps)
table(data2$steps~data2$date)
table(data2$steps,data2$date)
hist(data2$steps~data2$date)
rm(list=ls())
```(r=preprocess)
setwd( "/Users/dishing/datascience3homework/homework7")
data1<-read.csv("./activity.csv")
```
class(data1)
head(data1)
tapply(data1, data1$date, mean)
tapply(data1$steps, data1$date, mean)
totalstepsperday<-tapply(data1$steps,data1$date,sum)
totalstepsperday
hist(totalstepsperday)
hist(totalstepsperday,main="Total Number of Steps Taken per Day",xlab="Total Steps", ylab="Days")
head(data1)
head(data1,20)
tapply(data1$steps,data1$interval,mean)
tapply(data1$steps,data1$interval,mean,na.omit=T)
head(data1,20)
str(data1$steps)
select(data1$interval,mean(data1$steps))
plot(data1$interval,mean(data1$steps))
plot(data1$interval,data1$steps)
plot(data1$interval,data1$steps,type="l")
arrange(data1,interval)
tapply(data1$steps,data1$interval,mean)
data2<-filter(data1,!is.na(steps))
head(data2)
tapply(data2$steps, data2$interval, mean)
data1
head(data1)
data2<-filter(data1,!is.na(steps))
head(data2)
data2<-data1[!is.na(data1$steps)),]
data2<-data1[!is.na(data1$steps),]
head(data2)
class(data2_1)
data2<-data1[!is.na(data1$steps),]
data2_1<-tapply(data2$steps,data2$interval,mean)
head(data2_1)
plot(data2_1,col="blue",type="l",xlab="Interval[minutes]",ylab="Average number of steps")
plot(data2_1,col="blue",type="l",xlab="Interval[minutes]",ylab="Average number of steps",main="Average Number of Steps per Interval")
unique(data2$interval)
interval1<-unique(data2$interval)
data2_2<-c(unique(data2$interval),data2_1)
head(data2_2)
data2_2<-list(unique(data2$interval),data2_1)
head(data2_2)
head(data2_2)
names(data2_2)
data2_2<-list(interval=unique(data2$interval),Steps=data2_1)
names(data2_2)
plot(data2_2$interval~data2_2$steps,col="blue",type="l",xlab="Interval[minutes]",ylab="Average number of steps",main="Average Number of Steps per Interval")
plot(data2_2$interval~data2_2$Steps,col="blue",type="l",xlab="Interval[minutes]",ylab="Average number of steps",main="Average Number of Steps per Interval")
plot(data2_2$Steps~data2_2$interval,col="blue",type="l",xlab="Interval[minutes]",ylab="Average number of steps",main="Average Number of Steps per Interval",lwd=2)
data2_2$interval[which.max(data2_2$Steps)]
data1
Miss<-length(data1)-length(data2)
Miss
findnaandrm<-function(col1=){
na_position<-which(is.na(col1))
col1[na_position]<-mean(col1,na.rm=T)
}
tapply(data1$steps,data1$interval,findnaandrm)
findnaandrm<-function(col1){
na_position<-which(is.na(col1))
col1[na_position]<-mean(col1,na.rm=T)
}
tapply(data1$steps,data1$interval,findnaandrm)
data2_2
data3<-tapply(data1$steps,data1$interval,findnaandrm)
head(data2_2)
data3
data2_1==data3
findnaandrm<-function(col1){
na_position<-which(is.na(col1))
mean_vec <- rep(mean(col1, na.rm=TRUE), times=length(na_position))
col1[na_position,"steps"]<-mean_vec
}
data3<-tapply(data1$steps,data1$interval,findnaandrm)
findnaandrm<-function(col1){
rm(NA_count)
na_position<-which(is.na(col1))
mean_vec <- rep(mean(col1, na.rm=TRUE), times=length(na_position))
col1[na_position,"steps"]<-mean_vec
}
data3<-tapply(data1$steps,data1$interval,findnaandrm)
na_position<-which(is.na(data1$steps))
mean_vec <- rep(mean(data1$steps, na.rm=TRUE), times=length(na_position))
data3<-data1$steps[na_position,"steps"]<-mean_vec
na_position<-which(is.na(data1$steps))
mean_vec <- rep(mean(data1$steps, na.rm=TRUE), times=length(na_position))
data3<-data1$steps[na_position,"steps"]<-mean_vec
na_position<-which(is.na(data1$steps))
mean_vec <- rep(mean(data1$steps, na.rm=TRUE), times=length(na_position))
data3<-data1[na_position,"steps"]<-mean_vec
findnaandrm<-function(col1){
na_position<-which(is.na(col1))
mean_vec <- rep(mean(col1, na.rm=TRUE), times=length(na_position))
col1[na_position,"steps"]<-mean_vec
}
data3<-tapply(data1$steps,data1$interval,findnaandrm)
data3
findnaandrm<-function(col1){
na_position<-which(is.na(col1))
mean_vec <- rep(mean(col1, na.rm=TRUE), times=length(na_position))
data1[na_position,"steps"]<-mean_vec
}
data3<-tapply(data1$steps,data1$interval,findnaandrm)
data3
na_position<-which(is.na(col1))
mean_vec <- rep(mean(col1, na.rm=TRUE), times=length(na_position))
data1[na_position,"steps"]<-mean_vec
data1
}
data3<-tapply(data1$steps,data1$interval,findnaandrm)
findnaandrm<-function(col1){
na_position<-which(is.na(col1))
mean_vec <- rep(mean(col1, na.rm=TRUE), times=length(na_position))
data1[na_position,"steps"]<-mean_vec
data1
}
data3<-tapply(data1$steps,data1$interval,findnaandrm)
data3
findnaandrm<-function(col1){
na_position<-which(is.na(col1))
mean_vec <- rep(mean(col1, na.rm=TRUE), times=length(na_position))
data3<-data1[na_position,"steps"]<-mean_vec
data3
}
data3<-tapply(data1$steps,data1$interval,findnaandrm)
data3
na_position<-which(is.na(data1$steps))
mean_vec <- rep(mean(data1$steps, na.rm=TRUE), times=length(na_position))
data3<-data1[na_position,"steps"]<-mean_vec
data3
na_pos <- which(is.na(data1$steps))
mean_vec <- rep(mean(data1$steps, na.rm=TRUE), times=length(na_pos))
data3<-data1[na_pos, "steps"] <- mean_vec
data3
na_pos <- which(is.na(data1$steps))
mean_vec <- rep(mean(data1$steps, na.rm=TRUE), times=length(na_pos))
data1[na_pos, "steps"] <- mean_vec
data1
findnaandrm<-function(col1){
na_position<-which(is.na(col1))
mean_vec <- rep(mean(col1, na.rm=TRUE), times=length(na_position))
data1[na_position,"steps"]<-mean_vec
}
data3<-tapply(data1$steps,data1$interval,findnaandrm)
data3
data1
data1
tapply(data1$steps,data1$date,sum)
data3_2<-tapply(data1$steps,data1$date,sum)
hist(data3_2,main="Number of Daily Steps",col="red",xlab="Total Steps by Day", ylab="Days",sub="NA replaced by mean value")
str(data1)
data1
rm(li=ls())
rm(list=ls())
data1
totalstepsperday<-tapply(data1$steps,data1$date,sum)
setwd( "/Users/dishing/datascience3homework/homework7")
data1<-read.csv("./activity.csv")
totalstepsperday<-tapply(data1$steps,data1$date,sum)
hist(totalstepsperday,main="Total Number of Steps Taken per Day",xlab="Total Steps", ylab="Days",col="black",breaks = 10)
mean1<-mean(totalstepsperday,na.rm=T)
median1<-median(totalstepsperday,na.rm=T)
result1<-list(mean = mean1, median = median1)
result1
data1
data2<-data1[!is.na(data1$steps),]
data2_1<-tapply(data2$steps,data2$interval,mean)
data2_2<-list(interval=unique(data2$interval),Steps=data2_1)
plot(data2_2$Steps~data2_2$interval,col="blue",type="l",xlab="Interval[minutes]",ylab="Average number of steps",main="Average Number of Steps per Interval",lwd=2)
data2_2$interval[which.max(data2_2$Steps)]
Miss<-length(data1$steps)-length(data2$steps)
Miss
na_pos <- which(is.na(data1$steps))
mean_vec <- rep(mean(data1$steps, na.rm=TRUE), times=length(na_pos))
data1[na_pos, "steps"] <- mean_vec
data3_2<-tapply(data1$steps,data1$date,sum)
hist(data3_2,main="Number of Daily Steps",col="red",xlab="Total Steps by Day", ylab="Days",sub="NA replaced by mean value",breaks = 10)
result2<-list(mean2=mean(data3_2),median2=median(data3_2))
result2
data1
data4_1<-filter(data1,weekdays(as.Date(data1$date)) %in% c("Saturday","Sunday")))
data4_1<-filter(data1,weekdays(as.Date(date)) %in% c("Saturday","Sunday")))
data4_1<-filter(data1,weekdays(as.Date(date)) =="Saturday"|weekdays(as.Date(date)) =="Sunday")))
data4_1<-filter(data1,weekdays(as.Date(date)) %in% c("Saturday","Sunday"))
data4_1
data4_2<-filter(data1,!weekdays(as.Date(date)) %in% c("Saturday","Sunday"))
data4<-rbind(data4_1,data4_2)
data4<-mutate(data4,daytime=rep(c("weekday","weekend"),c(length(data4_1$date),length(data4_2$date))))
data4
tail(data4)
data4_1<-filter(data1,weekdays(as.Date(date)) %in% c("Saturday","Sunday"))
data4_2<-filter(data1,!weekdays(as.Date(date)) %in% c("Saturday","Sunday"))
data4<-rbind(data4_1,data4_2)
data4<-mutate(data4,daytype=rep(c("weekday","weekend"),c(length(data4_1$date),length(data4_2$date))))
library(lattice)
xyplot(mean(steps) ~ interval | daytype, data4,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
xyplot(mean(data4$steps) ~ data4$interval | daytype, data4,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
mean(data4$steps)
data4
data5<-tapply(data4$steps,data4$date,mean)
?aggregate
data5<-tapply(data4$steps,data4$date,mean,by=list(data4$daytype,data4$interval))
data5
names(data5) <- c("mean","daytype","interval")
data5
mean_data <- aggregate(data4$steps,
by=list(data4$daytype,data4$interval), mean)
names(mean_data) <- c("daytype", "interval", "mean")
library(lattice)
xyplot(mean(data4$steps) ~ data4$interval | daytype, data4,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
mean_data
mean_data <- aggregate(data4$steps,
by=list(data4$daytype,data4$interval), mean)
names(mean_data) <- c("daytype", "interval", "mean")
library(lattice)
xyplot(mean ~ interval | daytype, mean_data,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
data()
data1
name(data1)
names(data1)
rm(list=ls())
getwd()
ls()
source('~/.active-rstudio-document')
getwd()
setwd("/Users/dishing/datascience3homework/homework5")
